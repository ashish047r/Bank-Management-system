# -*- coding: utf-8 -*-
"""Bank management system

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z0WyAYHoDlLvX8NeWiEr8Zi9GGNaqIbI
"""

import sqlite3

class Bank:
    def __init__(self, db_name):
        self.db_name = db_name
        self.conn = sqlite3.connect(self.db_name)
        self.cursor = self.conn.cursor()
        self.create_table()
        self.loggedin = False

    def create_table(self):
        self.cursor.execute('''
            CREATE TABLE IF NOT EXISTS clients (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                phone TEXT NOT NULL,
                password TEXT NOT NULL,
                cash INTEGER NOT NULL
            )
        ''')
        self.conn.commit()

    def register(self, name, ph, password):
        if len(str(ph)) != 10:
            print("Invalid Phone number! Please enter a 10-digit number")
            return

        if len(password) < 5 or len(password) > 18:
            print("Enter a password greater than 5 and less than 18 characters")
            return

        self.cursor.execute('INSERT INTO clients (name, phone, password, cash) VALUES (?, ?, ?, ?)',
                            (name, ph, password, 100))
        self.conn.commit()
        print("Account created successfully")

    def login(self, name, ph, password):
      self.cursor.execute('SELECT * FROM clients WHERE name=?', (name,))
      client = self.cursor.fetchone()
      if client:
          _, _, stored_ph, stored_password, _ = client
          if stored_ph == ph and stored_password == password:
              self.loggedin = True
              self.name = name  # Set the name attribute here
              print(f"{name} logged in")
          else:
              print("Wrong details")
      else:
          print("Account not found")


    def add_cash(self, amount):
        if amount > 0:
            self.cursor.execute('UPDATE clients SET cash=cash+? WHERE name=?', (amount, self.name))
            self.conn.commit()
            print("Amount added successfully")
        else:
            print("Enter a correct value of amount")

    def transfer_cash(self, amount, recipient_name):
      self.cursor.execute('SELECT cash FROM clients WHERE name=?', (self.name,))
      sender_cash = self.cursor.fetchone()[0]

      if amount <= 0 or amount > sender_cash:
          print("Invalid amount or insufficient balance.")
          return

      self.cursor.execute('SELECT cash FROM clients WHERE name=?', (recipient_name,))
      recipient_data = self.cursor.fetchone()

      if recipient_data is None:
          print(f"Recipient '{recipient_name}' not found.")
          return

      recipient_cash = recipient_data[0]

      self.cursor.execute('UPDATE clients SET cash=cash-? WHERE name=?', (amount, self.name))
      self.cursor.execute('UPDATE clients SET cash=cash+? WHERE name=?', (amount, recipient_name))
      self.conn.commit()




    def password_change(self, new_password):
        if len(new_password) < 5 or len(new_password) > 18:
            print("Enter a password greater than 5 and less than 18 characters")
        else:
            self.cursor.execute('UPDATE clients SET password=? WHERE name=?', (new_password, self.name))
            self.conn.commit()
            print("New Password set up successfully")

    def start(self):
        print("Welcome to my Bank")
        print("1. Login")
        print("2. Create a new Account")
        user = int(input("Make a decision: "))

        if user == 1:
            print("Logging in")
            name = input("Enter Name: ")
            ph = input("Enter Phone Number: ")
            password = input("Enter password: ")
            self.login(name, ph, password)
            while self.loggedin:
                print("1. Add amount")
                print("2. Check Balance")
                print("3. Transfer amount")
                print("4. Edit profile")
                print("5. Logout")
                login_user = int(input())
                if login_user == 1:
                    print("Balance =", self.get_balance())
                    amount = int(input("Enter amount: "))
                    self.add_cash(amount)
                elif login_user == 2:
                    print("Balance =", self.get_balance())
                elif login_user == 3:
                    print("Balance =", self.get_balance())
                    amount = int(input("Enter amount: "))
                    recipient_name = input("Enter recipient's name: ")
                    self.transfer_cash(amount, recipient_name)
                elif login_user == 4:
                    print("1. Password change")
                    edit_profile = int(input())
                    if edit_profile == 1:
                        new_password = input("Enter new Password: ")
                        self.password_change(new_password)
                elif login_user == 5:
                    self.loggedin = False

        elif user == 2:
            print("Creating a new Account")
            name = input("Enter Name: ")
            ph = input("Enter Phone Number: ")
            password = input("Enter password: ")
            self.register(name, ph, password)

    def get_balance(self):
        self.cursor.execute('SELECT cash FROM clients WHERE name=?', (self.name,))
        return self.cursor.fetchone()[0]


if __name__ == "__main__":
    db_name = "bank.db"
    Bank_object = Bank(db_name)
    Bank_object.start()

